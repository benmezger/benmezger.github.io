<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hi, there on Ben Mezger</title><link>https://seds.nl/</link><description>Recent content in Hi, there on Ben Mezger</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Apr 2020 00:00:00 -0300</lastBuildDate><atom:link href="https://seds.nl/index.xml" rel="self" type="application/rss+xml"/><item><title>Personal git workflow</title><link>https://seds.nl/notes/personal_git_workflow/</link><pubDate>Tue, 04 Aug 2020 11:06:00 -0300</pubDate><guid>https://seds.nl/notes/personal_git_workflow/</guid><description>tags Git Programming Workflow As of today, this is currently my git flow for most of my projects.
Commit messages # From: https://chris.beams.io/posts/git-commit/
Feat: Any code that contains only a new feature, whether a new model field, a new API flag, etc Refactor: Any general code refactoring that does not contain anything new nor fixes anything. Chore: Anything related to the build configuration, dependency updates Docs: Anything related to documentation.</description></item><item><title>Kommunistische Partei Deutschlands (KPD)</title><link>https://seds.nl/notes/kommunistische_partei_deutschlands/</link><pubDate>Mon, 03 Aug 2020 15:10:00 -0300</pubDate><guid>https://seds.nl/notes/kommunistische_partei_deutschlands/</guid><description> tags History Politics KPD election poster, 1932. The caption at the bottom reads &amp;lsquo;An end to this system!'.
Figure 1: KPD election poster, 1932. The caption at the bottom reads &amp;lsquo;An end to this system!&amp;rsquo;.
Related links # https://en.wikipedia.org/wiki/Communist%5FParty%5Fof%5FGermany</description></item><item><title>Python temporary file</title><link>https://seds.nl/notes/python_temporary_file/</link><pubDate>Sun, 02 Aug 2020 16:44:00 -0300</pubDate><guid>https://seds.nl/notes/python_temporary_file/</guid><description>tags Python Programming Python&amp;rsquo;s tempfile standard library is pretty neat when we need to create a temporary file and/or directories. Instead of having a much of code like this:
import pathlib def create_file(filename): if pathlib.Path(filename).exists(): # handle path removal/rewrite/backup pass with open(filename, &amp;#34;w&amp;#34;) as f: # write to file pass We can ask Python to take care of handling this type of tasks for us. tempfile handles most of the OS API, so we can focus on writting the logic instead.</description></item><item><title>Python Async</title><link>https://seds.nl/notes/python_async/</link><pubDate>Thu, 30 Jul 2020 22:38:00 -0300</pubDate><guid>https://seds.nl/notes/python_async/</guid><description>tags Python Programming Important keywords # Asynchronous IO (async IO) Language-agnostic paradigm (model) coroutine A Python (sort of generator function) async/await Python keywords used to defined a coroutine asyncio Python package that provides an API for running/managing coroutines Coroutine # A coroutine allows a function to pause before returning or indirectly call another coroutine for some time, for example:
import asyncio import time async def count(n): print(f&amp;#34;n is {n}&amp;#34;) await asyncio.</description></item><item><title>Using macros in Emacs</title><link>https://seds.nl/notes/using_macros_in_emacs/</link><pubDate>Wed, 29 Jul 2020 08:51:00 -0300</pubDate><guid>https://seds.nl/notes/using_macros_in_emacs/</guid><description>tags Emacs Emacs macros allows us to record sequence of keyboard keystrokes, mouse actions, menu actions that is bound to an Emacs command. It allows us to record these actions and repeat them when needed.
Creating a new macro # C-x ( starts recording a macro C-x ) stops recording a macro C-x e executes the macro C-u 37 C-x e executes the macro 37 times C-u 0 C-x e executes the macro an infinite number of times until EOF.</description></item><item><title>Data and Reality: A Timeless Perspective on Perceiving and Managing Information in Our Imprecise World</title><link>https://seds.nl/notes/data_and_reality_a_timeless_perspective_on_perceiving_and_managing_information_in_our_imprecise_world/</link><pubDate>Mon, 13 Jul 2020 07:28:00 -0300</pubDate><guid>https://seds.nl/notes/data_and_reality_a_timeless_perspective_on_perceiving_and_managing_information_in_our_imprecise_world/</guid><description>Backlinks # Database tags Database Computer Science READING Data and Reality: A Timeless Perspective on Perceiving and Managing Information in Our Imprecise World # Table 1: Clock summary at [2020-07-13 Mon 08:05] Headline Time Total time 1:01 Data and Reality: A Timeless&amp;hellip; 1:01 :BOOK_CATEGORY: Database, software architecture, software engineering :BOOK_AUTHORS: William Kent :START_DATE:&amp;lt;2020-07-12 Sun&amp;gt; :END_DATE: nil :URL: https://www.</description></item><item><title>Methodologies</title><link>https://seds.nl/notes/methodologies/</link><pubDate>Tue, 23 Jun 2020 09:50:00 -0300</pubDate><guid>https://seds.nl/notes/methodologies/</guid><description>Backlinks # Use case template tags Programming Software Engineering</description></item><item><title>Software Engineering</title><link>https://seds.nl/notes/software_engineering/</link><pubDate>Tue, 23 Jun 2020 09:50:00 -0300</pubDate><guid>https://seds.nl/notes/software_engineering/</guid><description>Backlinks # Use case template Methodologies tags Programming Computer Science</description></item><item><title>Use case template</title><link>https://seds.nl/notes/use_case_template/</link><pubDate>Tue, 23 Jun 2020 09:49:00 -0300</pubDate><guid>https://seds.nl/notes/use_case_template/</guid><description>tags Computer Science Programming Methodologies Software Engineering The following is a requirements template developed by Alistair Cockburn. This template may or may not have all or more fields related to the requirements itself.
Recommended reading:
Basic Use Case Template USE CASE #N Goal in context Scope Level &amp;lt;one of: Summary, Primary task, Subfunction&amp;gt; Preconditions Success end condition Failed end condition Primary actor &amp;lt;a role name for the primary actor, or description&amp;gt; Trigger &amp;lt;the action upon the system that starts the use case, may be time event&amp;gt; Priority &amp;lt;how critical to your system/organization&amp;gt; Frequency Usage example:</description></item><item><title>Go interfaces</title><link>https://seds.nl/notes/go_interfaces/</link><pubDate>Mon, 22 Jun 2020 20:26:00 -0300</pubDate><guid>https://seds.nl/notes/go_interfaces/</guid><description>tags Go Programming Programming Code snippets The following implements a DataModel, like Django&amp;rsquo;s Model class which requires Validate and Save methods be implemented by whoever uses that Interface. The problem is the Model. m object will be nil, because Model cannot access the User due to the embedded Model struct within the User struct.
package main import &amp;#34;fmt&amp;#34; type DataModel interface { Validate() Save() } type Model struct { DataModel } func (m *Model) Validate(){ fmt.</description></item><item><title>Database</title><link>https://seds.nl/notes/database/</link><pubDate>Sun, 21 Jun 2020 03:24:00 -0300</pubDate><guid>https://seds.nl/notes/database/</guid><description>Backlinks # Data and Reality: A Timeless Perspective on Perceiving and Managing Information in Our Imprecise World Postgres Notes from Data and Reality: A Timeless Perspective on Perceiving and Managing Information in Our Imprecise World
William tries to approach data towards how we perceive the world. The following key concepts can be considered in data modeling as to our inner domain.
Existence: To what extend are you really present and engaged in the process of life around yourself?</description></item><item><title>Postgres</title><link>https://seds.nl/notes/postgres/</link><pubDate>Sun, 21 Jun 2020 03:22:00 -0300</pubDate><guid>https://seds.nl/notes/postgres/</guid><description>Backlinks # List Foreign key constrants defined in a database tags Computer Architecture Computer Science Database</description></item><item><title>List Foreign key constrants defined in a database</title><link>https://seds.nl/notes/list_foreign_key_constrants_defined_in_a_database/</link><pubDate>Sun, 21 Jun 2020 03:20:00 -0300</pubDate><guid>https://seds.nl/notes/list_foreign_key_constrants_defined_in_a_database/</guid><description>tags Programming Code snippets Postgres Postgres View foreign key constrants defined in all databases
select kcu.table_schema || &amp;#39;.&amp;#39; ||kcu.table_name as foreign_table, &amp;#39;&amp;gt;-&amp;#39; as rel, rel_tco.table_schema || &amp;#39;.&amp;#39; || rel_tco.table_name as primary_table, string_agg(kcu.column_name, &amp;#39;, &amp;#39;) as fk_columns, kcu.constraint_name from information_schema.table_constraints tco join information_schema.key_column_usage kcu on tco.constraint_schema = kcu.constraint_schema and tco.constraint_name = kcu.constraint_name join information_schema.referential_constraints rco on tco.constraint_schema = rco.constraint_schema and tco.constraint_name = rco.constraint_name join information_schema.table_constraints rel_tco on rco.unique_constraint_schema = rel_tco.</description></item><item><title>Go reading struct tag</title><link>https://seds.nl/notes/go_reading_struct_tag/</link><pubDate>Sun, 21 Jun 2020 03:02:00 -0300</pubDate><guid>https://seds.nl/notes/go_reading_struct_tag/</guid><description>tags Go Programming Programming Code snippets The following code reads a specific struct Tag by name.
import ( &amp;#34;reflect&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;fmt&amp;#34; ) type Profile struct { Id int `validate:&amp;#34;numeric&amp;#34; json:&amp;#34;id&amp;#34;` First string `validate:&amp;#34;required&amp;#34; json:&amp;#34;first&amp;#34;` Last string `validate:&amp;#34;required&amp;#34; json:&amp;#34;last&amp;#34;` Birth string `validate:&amp;#34;required&amp;#34; json:&amp;#34;birth&amp;#34;` Sex string `validate:&amp;#34;required&amp;#34; json:&amp;#34;sex&amp;#34;` MaritalStatus string `validate:&amp;#34;required&amp;#34; json:&amp;#34;marital_status&amp;#34;` Children int `validate:&amp;#34;numeric&amp;#34; json:&amp;#34;children&amp;#34;` } func GetStructFieldValidators(data interface{}) map[string][]string { v := reflect.ValueOf(data) t := reflect.TypeOf(data) validators := make(map[string][]string) for i := 0; i &amp;lt; v.</description></item><item><title>Go defer</title><link>https://seds.nl/notes/go_defer/</link><pubDate>Fri, 19 Jun 2020 09:47:00 -0300</pubDate><guid>https://seds.nl/notes/go_defer/</guid><description> tags Go Programming Programming import &amp;#34;fmt&amp;#34; func trace(name string) string { fmt.Println(&amp;#34;Entering &amp;#34;, name) return name } func un(name string) string { fmt.Println(&amp;#34;Exiting&amp;#34;, name) return name } func a() { defer un(trace(&amp;#34;a&amp;#34;)) fmt.Println(&amp;#34;Hello, world&amp;#34;) } func b(){ defer un(trace(&amp;#34;b&amp;#34;)) fmt.Println(&amp;#34;Before i &amp;lt; 10 loop&amp;#34;) for i:=0 ; i &amp;lt; 10; i++{ defer fmt.Println(&amp;#34;i =&amp;#34;, i) } fmt.Println(&amp;#34;After i &amp;lt; 10 loop&amp;#34;) } func main(){ a() b() } Entering a Hello, world Exiting a Entering b Before i &amp;lt; 10 loop After i &amp;lt; 10 loop i = 9 i = 8 i = 7 i = 6 i = 5 i = 4 i = 3 i = 2 i = 1 i = 0 Exiting b</description></item><item><title>Antifa</title><link>https://seds.nl/notes/antifa/</link><pubDate>Mon, 15 Jun 2020 09:09:00 -0300</pubDate><guid>https://seds.nl/notes/antifa/</guid><description>tags Politics HOLD Antifa: The Anti-Fascist Handbook # Table 1: Clock summary at [2020-06-15 Mon 09:11] Headline Time Total time 0:00 :BOOK_CATEGORY: politics :BOOK_AUTHORS: Mark Bray :START_DATE: nil :END_DATE: nil :URL: https://www.amazon.com.br/Antifa-Anti-Fascist-Handbook-Mark-Bray/dp/1612197035</description></item><item><title>Weed</title><link>https://seds.nl/notes/weed/</link><pubDate>Sat, 06 Jun 2020 04:21:00 -0300</pubDate><guid>https://seds.nl/notes/weed/</guid><description> tags Politics Selling weed literally went from major felony to essential business (open during pandemic) in much of America &amp;amp; yet many are still in prison. Doesn’t make sense, isn’t right.
&amp;mdash; Elon Musk (@elonmusk) June 6, 2020</description></item><item><title>Org-roam</title><link>https://seds.nl/notes/org_roam/</link><pubDate>Thu, 04 Jun 2020 08:51:00 -0300</pubDate><guid>https://seds.nl/notes/org_roam/</guid><description>Backlinks # Org-roam Firefox bookmark Ox-hugo export all roam to Hugo Org-roam export backlinks on Hugo tags Org-mode Emacs</description></item><item><title>Ox-hugo export all roam to Hugo</title><link>https://seds.nl/notes/ox_hugo_export_all_roam_to_hugo/</link><pubDate>Thu, 04 Jun 2020 08:39:00 -0300</pubDate><guid>https://seds.nl/notes/ox_hugo_export_all_roam_to_hugo/</guid><description> tags Emacs Org-mode Org-roam Export all org-roam files to Hugo markdown (this might take some time)
From: jethrokuan/dots
(defun benmezger/org-roam-export-all () &amp;#34;Re-exports all Org-roam files to Hugo markdown.&amp;#34; (interactive) (dolist (f (org-roam--list-all-files)) (with-current-buffer (find-file f) (when (s-contains? &amp;#34;SETUPFILE&amp;#34; (buffer-string)) (org-hugo-export-wim-to-md)))))</description></item><item><title>Emacs</title><link>https://seds.nl/notes/emacs/</link><pubDate>Thu, 04 Jun 2020 08:36:00 -0300</pubDate><guid>https://seds.nl/notes/emacs/</guid><description>Backlinks # Org-roam Firefox bookmark Using macros in Emacs Ox-hugo export all roam to Hugo Org-roam Org-roam export backlinks on Hugo Org-mode Firefox bookmarks A brief introduction to Emacs Lisp for people with programming background | lgmoneda</description></item><item><title>Org-mode</title><link>https://seds.nl/notes/org_mode/</link><pubDate>Thu, 04 Jun 2020 08:35:00 -0300</pubDate><guid>https://seds.nl/notes/org_mode/</guid><description>Backlinks # Org-roam Firefox bookmark Ox-hugo export all roam to Hugo Org-roam Org-roam export backlinks on Hugo Org-mode Firefox bookmarks</description></item><item><title>Org-roam export backlinks on Hugo</title><link>https://seds.nl/notes/org_roam_export_backlinks_on_hugo/</link><pubDate>Thu, 04 Jun 2020 08:29:00 -0300</pubDate><guid>https://seds.nl/notes/org_roam_export_backlinks_on_hugo/</guid><description> tags Org-mode Emacs Org-roam Insert roam backlinks URL when exporting orgmode to HTML
From: jethrokuan/dots
(defun benmezger/org-roam-export-all () &amp;#34;Re-exports all Org-roam files to Hugo markdown.&amp;#34; (interactive) (dolist (f (org-roam--list-all-files)) (with-current-buffer (find-file f) (when (s-contains? &amp;#34;SETUPFILE&amp;#34; (buffer-string)) (org-hugo-export-wim-to-md))))) (defun benmezger/org-roam--backlinks-list (file) (when (org-roam--org-roam-file-p file) (mapcar #&amp;#39;car (org-roam-db-query [:select :distinct [from] :from links :where (= to $s1) :and from :not :like $s2] file &amp;#34;%private%&amp;#34;)))) (defun benmezger/org-export-preprocessor (_backend) (when-let ((links (benmezger/org-roam--backlinks-list (buffer-file-name)))) (insert &amp;#34;\n** Backlinks\n&amp;#34;) (dolist (link links) (insert (format &amp;#34;- [[file:%s][%s]]\n&amp;#34; (file-relative-name link org-roam-directory) (org-roam--get-title-or-slug link)))))) (add-hook &amp;#39;org-export-before-processing-hook #benmezger/org-export-preprocessor))</description></item><item><title>Communication</title><link>https://seds.nl/notes/communication/</link><pubDate>Tue, 02 Jun 2020 08:55:00 -0300</pubDate><guid>https://seds.nl/notes/communication/</guid><description>Backlinks # Nonviolent communication: A language for life</description></item><item><title>Politics</title><link>https://seds.nl/notes/politics/</link><pubDate>Tue, 02 Jun 2020 08:52:00 -0300</pubDate><guid>https://seds.nl/notes/politics/</guid><description>Backlinks # Abortion Media Antifa Na batalha contra o coronavirus, faltam lideres a humanidade Weed The Communist Manifesto Kommunistische Partei Deutschlands (KPD)</description></item><item><title>Coding Theory</title><link>https://seds.nl/notes/c-coding-theory/</link><pubDate>Sun, 31 May 2020 16:10:00 -0300</pubDate><guid>https://seds.nl/notes/c-coding-theory/</guid><description>tags Information Theory Computer Science Programming Related video: https://www.khanacademy.org/computing/computer-science/informationtheory/info-theory/v/source-encoding-language-of-coins-4-9
Source encoding # Say Alice and Bob want to communicate with each other over some cable. They both live far from each other, so they decided to run a wire between both of their houses. Their communication has been working fine until winter. When winter arrived, lots wind noise started to happen and they are unable to communicate with each other over their cable communication system.</description></item><item><title>Code snippets</title><link>https://seds.nl/notes/code-snippets/</link><pubDate>Sun, 31 May 2020 14:28:00 -0300</pubDate><guid>https://seds.nl/notes/code-snippets/</guid><description>Backlinks # Go reading struct tag List Foreign key constrants defined in a database Go interfaces tags Programming Python Python run HTTP server locally # 1 python -m http.server 8000 --bind 127.0.0.1</description></item><item><title>Binary calculation</title><link>https://seds.nl/notes/binary-calculation/</link><pubDate>Sun, 31 May 2020 13:06:00 -0300</pubDate><guid>https://seds.nl/notes/binary-calculation/</guid><description>tags Math Computer Science Computer Architecture The b before the code blocks mean binary number, to avoid confusion
Binary Addition # Possibilities # A OP B \= 1 + 1 10 1 + 0 1 0 + 1 1 0 + 0 0 1 + 1+1 11 Carry is involved whenever we have a result larger than bin 1</description></item><item><title>Math</title><link>https://seds.nl/notes/math/</link><pubDate>Sun, 31 May 2020 13:06:00 -0300</pubDate><guid>https://seds.nl/notes/math/</guid><description>Backlinks # Integral Calculus Binary calculation</description></item><item><title>Integral Calculus</title><link>https://seds.nl/notes/integral-calculus/</link><pubDate>Sun, 31 May 2020 13:05:00 -0300</pubDate><guid>https://seds.nl/notes/integral-calculus/</guid><description>tags Math These are the two ways we commonly think about definite integrals: they describe an accumulation of a quantity, so the entire definite integral gives us the net change in that quantity.1
Why Integral Calculus # Figure 1 represents 2 graphs of y = cos(x). Let&amp;rsquo;s say we would like to calculate the area of \( x\_1 \) . We could calculate the area by aproximation, for example, Graph B is filled with the area we would like to calculate, so we could divide this area by equal sections of \(\Delta x_n\) from a to b rectangles, then we could calculate the area of these rectangles by \(f(x_i) * \Delta x_n\) where \(f\) is the area of each of the rectangles.</description></item><item><title>Python</title><link>https://seds.nl/notes/python/</link><pubDate>Sun, 31 May 2020 13:04:00 -0300</pubDate><guid>https://seds.nl/notes/python/</guid><description>Backlinks # Go Programming Python temporary file Code snippets Compiler Python Async tags Computer Science Programming</description></item><item><title>Compiler</title><link>https://seds.nl/notes/compiler/</link><pubDate>Sun, 31 May 2020 13:03:00 -0300</pubDate><guid>https://seds.nl/notes/compiler/</guid><description>tags Computer Science Programming Syntax Analysis # Syntax analysis happens after the Lexical phase, and it is responsible for detecting syntax errors.
Grammar # Be design, computer languages have defined structure of what constitutes a valid program. in Python, a program is made up of functions/classes/imports, a function requires declarations and/or statements and so on. In C, a valid program needs to have a least a function called main, otherwise the GNU&amp;rsquo;s linker is unable to link the program.</description></item><item><title>Computer Architecture</title><link>https://seds.nl/notes/computer-architecture/</link><pubDate>Sun, 31 May 2020 13:01:00 -0300</pubDate><guid>https://seds.nl/notes/computer-architecture/</guid><description>Backlinks # Clean architecture Binary calculation The Pragmatic programmer: from journeyman to master RISCV Clean code Postgres</description></item><item><title>RISCV</title><link>https://seds.nl/notes/riscv/</link><pubDate>Sun, 31 May 2020 12:37:00 -0300</pubDate><guid>https://seds.nl/notes/riscv/</guid><description>Backlinks # RISCV tags Computer Science Operating Systems Computer Architecture Understanding RISCV stack pointer # L06 RISCV Functions(6up).pdf # Exceptions # Exception are unusual condition occurring at run time associated with an instruction in the current RISCV thread. Exceptions may be converted to traps, but that all depends on the execution environment.
Traps # Trap refers to the synchronous transfer control to a trap handler caused by an exceptional condition occurring within a RISC thread.</description></item><item><title>Thesis</title><link>https://seds.nl/notes/thesis/</link><pubDate>Sun, 31 May 2020 12:35:00 -0300</pubDate><guid>https://seds.nl/notes/thesis/</guid><description>Backlinks # Operating Systems</description></item><item><title>C programming</title><link>https://seds.nl/notes/c-programming/</link><pubDate>Sun, 31 May 2020 12:33:00 -0300</pubDate><guid>https://seds.nl/notes/c-programming/</guid><description>Tags Computer Science Programming C project architecture guidelines # Functions exposed in the header are like public methods # Think of each module like a class. The functions you expose in the header are like public methods. Only put a function in the header if it part of the module&amp;rsquo;s needed interface.
Avoiding circular module dependencies # Avoid circular module dependencies. Module A and module B should not call each other.</description></item><item><title>Programming</title><link>https://seds.nl/notes/programming/</link><pubDate>Sun, 31 May 2020 12:33:00 -0300</pubDate><guid>https://seds.nl/notes/programming/</guid><description>Backlinks # Python The Go Programming Language Specification - The Go Programming Language C programming Software Engineering Go Programming Go reading struct tag Clean architecture List Foreign key constrants defined in a database Python temporary file Go interfaces Go defer Use case template Code snippets Coding Theory The Pragmatic programmer: from journeyman to master A brief introduction to Emacs Lisp for people with programming background | lgmoneda Clean code Methodologies Compiler Personal git workflow Python Async</description></item><item><title>Go Programming</title><link>https://seds.nl/notes/go-programming/</link><pubDate>Sun, 31 May 2020 12:31:00 -0300</pubDate><guid>https://seds.nl/notes/go-programming/</guid><description>Backlinks # The Go Programming Language Specification - The Go Programming Language Go reading struct tag Go interfaces Go defer tags Programming Computer Science Related notes: Interesting Golang libraries
Packages # In Go, programs start running in package main. Package names are defined by the last element of the import path: import math/rand has files which begin with the package rand. Packages consists of a bunch of .</description></item><item><title>Computer Science</title><link>https://seds.nl/notes/computer-science/</link><pubDate>Sun, 31 May 2020 12:29:00 -0300</pubDate><guid>https://seds.nl/notes/computer-science/</guid><description>Backlinks # Operating systems: Internals and design principles (9th edition) Python C programming Software Engineering Go Programming Data and Reality: A Timeless Perspective on Perceiving and Managing Information in Our Imprecise World Clean architecture Use case template Operating Systems Binary calculation Information Theory Coding Theory The Pragmatic programmer: from journeyman to master RISCV Clean code Postgres Compiler</description></item><item><title>Operating Systems</title><link>https://seds.nl/notes/operating-systems/</link><pubDate>Sun, 31 May 2020 12:29:00 -0300</pubDate><guid>https://seds.nl/notes/operating-systems/</guid><description>Backlinks # Operating systems: Internals and design principles (9th edition) RISCV tags Thesis Computer Science OS Kit # The OSKit is a framework and a set of 34 component libraries oriented to operating systems, together with extensive documentation. By providing in a modular way not only most of the infrastructure &amp;ldquo;grunge&amp;rdquo; needed by an OS, but also many higher-level components, the OSKit&amp;rsquo;s goal is to lower the barrier to entry to OS R&amp;amp;D and to lower its costs.</description></item><item><title>Socratic questioning</title><link>https://seds.nl/notes/socratic-questioning/</link><pubDate>Sun, 31 May 2020 10:16:00 -0300</pubDate><guid>https://seds.nl/notes/socratic-questioning/</guid><description>Backlinks # Thinking methods tags Thinking methods Mindset Mental models Learning Socratic questioning is one of many Mental models allows us to pursue thoughts in many directions and establish first principles through strict analysis. It allows us to establish truth and separate knowledge from ignorance by reveling underlying assumptions. The method allows us to explore complex ideas and find the truth out of things while opening up issues and problems.</description></item><item><title>Mental models</title><link>https://seds.nl/notes/mental-models/</link><pubDate>Sun, 31 May 2020 01:30:00 -0300</pubDate><guid>https://seds.nl/notes/mental-models/</guid><description>Backlinks # The great mental models: General thinking concepts Thinking methods Socratic questioning tags Thinking methods Mindset Learning « You only think you know, as a matter of fact. And most of your actions are based on incomplete knowledge and you really don’t know what it is all about, or what the purpose of the world is, or know a great deal of other things.</description></item><item><title>Mindset</title><link>https://seds.nl/notes/mindset/</link><pubDate>Sun, 31 May 2020 01:24:00 -0300</pubDate><guid>https://seds.nl/notes/mindset/</guid><description>Backlinks # The great mental models: General thinking concepts Mental models Thinking methods Socratic questioning Nonviolent communication: A language for life</description></item><item><title>Learning</title><link>https://seds.nl/notes/learning/</link><pubDate>Sun, 31 May 2020 01:23:00 -0300</pubDate><guid>https://seds.nl/notes/learning/</guid><description>Backlinks # The great mental models: General thinking concepts Mental models Thinking methods Socratic questioning Nonviolent communication: A language for life</description></item><item><title>Thinking methods</title><link>https://seds.nl/notes/thinking-methods/</link><pubDate>Sun, 31 May 2020 01:19:00 -0300</pubDate><guid>https://seds.nl/notes/thinking-methods/</guid><description>Backlinks # The great mental models: General thinking concepts Mental models Socratic questioning tags Learning Mindset Mental models Thinking methods are techniques where we can get better at solving complex problems and having a clearer view of the problem. It allows us to thought experience and running towards reality instead of away from. Understanding must constantly be tested against reality and updated accordingly. We can break problems into sub-problems so we can better view reality.</description></item><item><title>Interesting Golang libraries</title><link>https://seds.nl/notes/interesting-golang-libraries/</link><pubDate>Sat, 30 May 2020 20:33:00 -0300</pubDate><guid>https://seds.nl/notes/interesting-golang-libraries/</guid><description>Backlinks # Go Programming
https://github.com/jmoiron/sqlx
https://pg.uptrace.dev/guide/
https://github.com/go-pg/pg
Entered on [2020-05-27 Wed 21:36]
&amp;lt;~/workspace/commit-validator/requirements.txt&amp;gt;</description></item><item><title>Book progress</title><link>https://seds.nl/notes/reading-progress/</link><pubDate>Sat, 30 May 2020 20:10:00 -0300</pubDate><guid>https://seds.nl/notes/reading-progress/</guid><description>Interesting reading: Quantifying Reading
Goodreads book list: https://www.goodreads.com/review/list/75297054
Reading progress as of &amp;lt;2020-05-30 Sat&amp;gt;
Table 1: Clock summary at [2020-07-13 Mon 08:07] Tags Headline Time ALL Total time 1d 11:52 File time 2:36 @books, reading, clock The Communist Manifesto 2:36 File time 11:23 reading, @books, clock The Pragmatic Programmer: From&amp;hellip; 11:23 File time 3:24 reading, @books, clock Operating Systems: Internals and&amp;hellip; 3:24 File time 3:28 reading, @books, toread, clock Clean Architecture 3:28 File time 5:48 read, @books, clock The Great Mental Models: General&amp;hellip; 5:48 File time 8:12 read, @books, clock Nonviolent Communication: A language&amp;hellip; 8:12 File time 1:01 reading, @books, clock Data and Reality: A Timeless&amp;hellip; 1:01</description></item><item><title>Abortion</title><link>https://seds.nl/notes/abortion/</link><pubDate>Sat, 30 May 2020 20:09:00 -0300</pubDate><guid>https://seds.nl/notes/abortion/</guid><description>tags Politics Abortion should be legal, safe and rare</description></item><item><title>Media</title><link>https://seds.nl/notes/media/</link><pubDate>Sat, 30 May 2020 20:08:00 -0300</pubDate><guid>https://seds.nl/notes/media/</guid><description>tags Politics Mídia - Noam Chomsky # Duas concepções diferentes de democracia # Uma sociedade democrática é aquela em que o povo dispõe de condições de participar de maneira significativa na condução de seus assuntos pessoais e na qual os canais de informação são acessíveis e livres
O povo deve ser impedido de conduzir seus assuntos pessoais e os canais de informação devem ser estreita e rigidamente controlados</description></item><item><title>Na batalha contra o coronavirus, faltam lideres a humanidade</title><link>https://seds.nl/notes/na-batalha-contra-o-coronavirus/</link><pubDate>Sat, 30 May 2020 20:06:00 -0300</pubDate><guid>https://seds.nl/notes/na-batalha-contra-o-coronavirus/</guid><description>tags Politics &amp;lt;2020-04-01 Wed 22:23&amp;gt; # O verdadeiro antídoto para epidemias não é a segregação, mas a cooperação.
&amp;lt;2020-04-01 Wed 22:28&amp;gt; # Isso porque a melhor defesa que os humanos têm contra os patógenos não é o isolamento, mas a informação. A humanidade tem vencido a guerra contra as epidemias porque, na corrida armamentista entre patógenos e médicos, os patógenos dependem de mutações cegas, ao passo que os médicos se apoiam na análise científica da informação.</description></item><item><title>Alice in wonderland: The complete collection</title><link>https://seds.nl/notes/alice-in-wonderland/</link><pubDate>Sat, 30 May 2020 20:05:00 -0300</pubDate><guid>https://seds.nl/notes/alice-in-wonderland/</guid><description>&amp;lt;2020-03-07 Sat 03:33&amp;gt; # Why, there’s hardly enough of me left to make one respectable person!”
&amp;lt;2020-03-13 Fri 01:10&amp;gt; # at least I know who I was when I got up this morning, but I think I must have been changed several times since then.’
&amp;lt;2020-03-14 Sat 00:29&amp;gt; # ‘they’re sure to kill it in a day or two: wouldn’t it be murder to leave it behind?’</description></item><item><title>Nonviolent communication: A language for life</title><link>https://seds.nl/notes/non-violent-communication/</link><pubDate>Sat, 30 May 2020 20:04:00 -0300</pubDate><guid>https://seds.nl/notes/non-violent-communication/</guid><description>Backlinks # Mental models tags Mindset Learning Communication READ Nonviolent Communication: A language for life # Table 1: Clock summary at [2020-06-06 Sat 03:49] Headline Time Total time 8:12 Nonviolent Communication: A language&amp;hellip; 8:12 CLOSED: [2020-05-14 Thu 09:18]
:BOOK_CATEGORY: psychology :BOOK_AUTHORS: Marshall B. Rosenberg :START_DATE: &amp;lt;2020-04-14 Tue&amp;gt; :END_DATE: &amp;lt;2020-05-14 Thu&amp;gt; :URL: https://www.</description></item><item><title>The great mental models: General thinking concepts</title><link>https://seds.nl/notes/the-great-mental-models/</link><pubDate>Sat, 30 May 2020 20:03:00 -0300</pubDate><guid>https://seds.nl/notes/the-great-mental-models/</guid><description>Backlinks # Mental models tags Thinking methods Mental models Mindset Learning READ The Great Mental Models: General Thinking Concepts #</description></item><item><title>Clean code</title><link>https://seds.nl/notes/clean-code/</link><pubDate>Sat, 30 May 2020 20:01:00 -0300</pubDate><guid>https://seds.nl/notes/clean-code/</guid><description> tags Computer Science Programming Computer Architecture NEXT Clean Code #</description></item><item><title>Clean architecture</title><link>https://seds.nl/notes/clean-architecture/</link><pubDate>Sat, 30 May 2020 20:00:00 -0300</pubDate><guid>https://seds.nl/notes/clean-architecture/</guid><description> tags Computer Science Computer Architecture Programming HOLD Clean Architecture #</description></item><item><title>Operating systems: Internals and design principles (9th edition)</title><link>https://seds.nl/notes/operating-systems/</link><pubDate>Sat, 30 May 2020 19:58:00 -0300</pubDate><guid>https://seds.nl/notes/operating-systems/</guid><description>tags Computer Science Operating Systems READING Operating Systems: Internals and Design Principles (9th Edition) # Table 1: Clock summary at [2020-06-06 Sat 03:47] Headline Time Total time 3:24 Operating Systems: Internals and&amp;hellip; 3:24 Exercises # 1.1. CPU: Takes care of processing data Main memory: Volatile memory for storing data and program instructions Secondary storage: Non-volatile for permantely storing data.</description></item><item><title>The Pragmatic programmer: from journeyman to master</title><link>https://seds.nl/notes/the-pragmatic-programmer/</link><pubDate>Sat, 30 May 2020 19:57:00 -0300</pubDate><guid>https://seds.nl/notes/the-pragmatic-programmer/</guid><description>tags Programming Computer Science Computer Architecture READING The Pragmatic Programmer: From Journeyman to Master # Table 1: Clock summary at [2020-06-23 Tue 09:01] Headline Time Total time 10:04 The Pragmatic Programmer: From&amp;hellip; 10:04 :BOOK_CATEGORY: Computer science, software architecture, software engineering :BOOK_AUTHORS: Andy Hunt, David Thomas :START_DATE: &amp;lt;2020-05-25 Mon&amp;gt; :END_DATE: nil :URL: https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X</description></item><item><title>The Communist Manifesto</title><link>https://seds.nl/notes/communist-manifesto/</link><pubDate>Sat, 30 May 2020 19:53:00 -0300</pubDate><guid>https://seds.nl/notes/communist-manifesto/</guid><description>tags Politics READING The Communist Manifesto # Table 1: Clock summary at [2020-06-15 Mon 09:07] Headline Time Total time 2:36 The Communist Manifesto 2:36 :BOOK_CATEGORY: politics :BOOK_AUTHORS: Karl Marx, Friedrich Engels :START_DATE: &amp;lt;2020-05-25 Mon&amp;gt; :END_DATE: nil :URL: https://www.amazon.com/Communist-Manifesto-Karl-Marx/dp/1508475660</description></item><item><title>Org-roam Firefox bookmark</title><link>https://seds.nl/notes/org-roam-firefox-bookmark/</link><pubDate>Sat, 30 May 2020 19:30:00 -0300</pubDate><guid>https://seds.nl/notes/org-roam-firefox-bookmark/</guid><description>tags Org-mode Emacs Org-roam Org-roam has roam-protocol, which we can call throughout the system just like Org-mode Firefox bookmarks.
Org-roam protocol supports specifying the roam template to use. Template is the template key for a template in org-roam-capture-ref-templates. More documentation on the templating system can be found here.
These templates should contain a #+ROAM_KEY: ${ref} in it.
Roam-ref protocol # Find and creates from with a specific ROAM_KEY</description></item><item><title>Org-mode Firefox bookmarks</title><link>https://seds.nl/notes/orgmode-firefox-bookmark/</link><pubDate>Sat, 30 May 2020 19:22:00 -0300</pubDate><guid>https://seds.nl/notes/orgmode-firefox-bookmark/</guid><description>Backlinks # Org-roam Firefox bookmark tags Org-mode Emacs Add the following scripts to call org-capture from Firefox
Call capture template # The following calls capture template key n
javascript:location.href=&amp;#39;org-protocol://capture?template=n&amp;#39;+&amp;#39;&amp;amp;url=&amp;#39;+encodeURIComponent(window.location.href)+&amp;#39;&amp;amp;title=&amp;#39;+encodeURIComponent(document.title)+&amp;#39;&amp;amp;body=&amp;#39;+encodeURIComponent(window.getSelection()); Without a capture template # If unspecified, the template key is set in the variable org-protocol-default-template-key. The following template placeholders are available:
%:link The URL %:description The webpage title %:annotation Equivalent to [[%:link][%:description]] %i The selected text See: https:orgmode.</description></item><item><title>Cool companies</title><link>https://seds.nl/notes/cool-companies/</link><pubDate>Sat, 30 May 2020 19:10:00 -0300</pubDate><guid>https://seds.nl/notes/cool-companies/</guid><description/></item><item><title>List of Spotify artists</title><link>https://seds.nl/notes/list-of-spotify-artists/</link><pubDate>Sat, 30 May 2020 18:56:00 -0300</pubDate><guid>https://seds.nl/notes/list-of-spotify-artists/</guid><description>Artists Lana Del Rey Slipknot CocoRosie Papir Jungbluth Winds of Plague Billy Talent Russian Circles Neversleep Serj Tankian Annotations Of An Autopsy Circular Hollywood Undead Ocean of Grief Rosetta Darude Mos Def Amenra The Game POWERS Keny Arkana Cartola The Stranglers Armin van Buuren Sting Kavinsky Snowmine Linde Schöne Molotov Solution Skazi Grave Miasma Pathology CHO Klint Mc João Alpinist, Masakari Mässmörd Mano Brown Passenger Seu Jorge Oliver Schories Wolfbrigade Tim Maia Machine Head La Gossa Sorda Shpongle Paul Kalkbrenner Carpathian Forest Impending Doom Jonas Mantey After The Burial Calle 13 Opeth Black Label Society Ufomammut Cássia Eller Buena Vista Social Club Muse Weval A$AP Rocky Zero 7 Parkway Drive XXXTENTACION Uncle Acid &amp;amp; The Deadbeats Gramatik Hatebreed CCCP – Fedeli Alla Linea O Rappa Tom Rosenthal Johnny Preston Emmure Audialist Motörhead Ott The Faceless Bring Me The Horizon The Kooks Lady Gaga Scann-Tec Slayer Lee DeWyze Behemoth Frank Sinatra SBTRKT RJD2 Air Archive Cigarettes After Sex Aeuria Kid Loco Grupo Fundo De Quintal Devendra Banhart Dödsrit 2Pac The Mamas &amp;amp; The Papas The Blues Brothers Alesana Milky Chance Dvne DOWN Mr.</description></item><item><title>Information Theory</title><link>https://seds.nl/notes/information_theory/</link><pubDate>Sat, 30 May 2020 16:14:00 -0300</pubDate><guid>https://seds.nl/notes/information_theory/</guid><description>Backlinks # Coding Theory tags Computer Science Related content: https://www.khanacademy.org/computing/computer-science/informationtheory/info-theory/
Humans express themselves using a variations of communication, such as language, physical gestures, drawing and etc. Language allows us to take a thought and break it down to a series of chunks. These chunks are externalized using a series of signals or symbols. Informally we can think of information as some message, stored or transmitted using some medium.</description></item><item><title>Attaching Jira issues to commit</title><link>https://seds.nl/posts/attaching-jira-issues-to-commits/</link><pubDate>Sun, 24 May 2020 02:39:00 -0300</pubDate><guid>https://seds.nl/posts/attaching-jira-issues-to-commits/</guid><description>TLDR ↕ Dynamically attach Jira attributes to commit body using git-hook. Check the project’s README. The place I work at requires Jira story ID and task ID attached to the commit body. Initially, I was attaching the ID to the commit body manually, by checking either my previous commit or opening up the Jira board, however, after working some hours I was easily forgetting to attach the IDs to the commit and getting annoying having to either reword them and perhaps having to lookup Jira again.</description></item><item><title>Patching requests HTTP hooks with custom arguments</title><link>https://seds.nl/posts/http-hooks-with-custom-arguments/</link><pubDate>Thu, 07 May 2020 18:59:00 -0300</pubDate><guid>https://seds.nl/posts/http-hooks-with-custom-arguments/</guid><description>I am working on a project where we have lots of functions integrated with external APIs. Functions where HTTP requests get dispatched, we log the current caller’s name, headers, and data (if any) in case we need to debug anything. For example:
import logging import requests LOGGER = logging.getLogger(&amp;#34;external&amp;#34;) def create_external_services(): ... LOGGER.info(f&amp;#34;[func] | Request {data}&amp;#34;) response = requests.post(&amp;#34;..&amp;#34;) LOGGER.info(f&amp;#34;[func] | Response {response.status_code} {response.text}&amp;#34;) ... def delete_external_services(): LOGGER.info(f&amp;#34;[func] | Request {data}&amp;#34;) response = requests.</description></item><item><title>Understanding key concepts before writing a Kernel</title><link>https://seds.nl/posts/writting-a-kernel-part-1/</link><pubDate>Sun, 03 May 2020 12:42:00 -0300</pubDate><guid>https://seds.nl/posts/writting-a-kernel-part-1/</guid><description>In this series of posts, I intend to document my re-go on writing a small, portable kernel for the RISC-V architecture. I developed a micro-kernel for the RISC-V ISA in my bachelor thesis, however, due to the time it takes on developing a kernel, and the time I had on writing a bachelor&amp;rsquo;s thesis, I choose on writing the kernel for the Sifive&amp;rsquo;s HiFive1 Rev B development board due to their well written bare metal compatibility Library for the board, low cost and most importantly, RISC-V.</description></item><item><title>Books</title><link>https://seds.nl/books/</link><pubDate>Thu, 23 Apr 2020 00:00:00 -0300</pubDate><guid>https://seds.nl/books/</guid><description>List # Reading progress as of &amp;lt;2020-05-30 Sat&amp;gt;
Table 1: Clock summary at [2020-05-30 Sat 00:59] Headline Time Total time 1d 1:05  List 1d 1:05  The Communist Manifesto 1:25  The Pragmatic Programmer: From… 2:48  Operating Systems: Internals and… 3:24  Clean Architecture 3:28  The Great Mental Models: General… 5:48  Nonviolent Communication: A language… 8:12 READING The Communist Manifesto # READING The Pragmatic Programmer: From Journeyman to Master # READING Operating Systems: Internals and Design Principles (9th Edition) # Exercises # 1.</description></item><item><title>Hello, org-mode and hugo</title><link>https://seds.nl/posts/hello-orgmode/</link><pubDate>Thu, 23 Apr 2020 00:00:00 -0300</pubDate><guid>https://seds.nl/posts/hello-orgmode/</guid><description>Hello, world! This is my first post here. This blog is created using Hugo and Emacs org-mode. I am still busy migrating my posts from Asciidoc to org-mode, so this should take a bit of time.</description></item><item><title>Finding exposed .git repositories</title><link>https://seds.nl/posts/finding-exposed-git-repositories/</link><pubDate>Mon, 30 Oct 2017 21:59:00 -0200</pubDate><guid>https://seds.nl/posts/finding-exposed-git-repositories/</guid><description>Developers use git to version control their source code. We all do, in fact, this blog is currently versioned by git. However, we not only use git to version control, but also to deploy applications. Usually we push new code to a remote server, where the server takes care of testing the code and then deploying the application. There are different ways of deploying an application, but this is one of them.</description></item><item><title>Notes on Linux's printk</title><link>https://seds.nl/posts/notes-on-linux-printk/</link><pubDate>Thu, 09 Mar 2017 22:26:00 -0300</pubDate><guid>https://seds.nl/posts/notes-on-linux-printk/</guid><description>Some of the content might be incorrect, since I am still trying to understand it thoroughly.
So I started studying the Linux Kernel more in depth, so I decided it would be nice for me to document my findings, so I can read it from time to time. I will be daily updating this post, as I am studying it everyday.
Keep in mind that I am using the x86 architecture.</description></item><item><title>A brief introduction to Emacs Lisp for people with programming background | lgmoneda</title><link>https://seds.nl/notes/a_brief_introduction_to_emacs_lisp_for_people_with_programming_background_lgmoneda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://seds.nl/notes/a_brief_introduction_to_emacs_lisp_for_people_with_programming_background_lgmoneda/</guid><description> Tags Emacs Programming</description></item><item><title>dots/config.el at master · jethrokuan/dots</title><link>https://seds.nl/notes/dots_config_el_at_master_jethrokuan_dots/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://seds.nl/notes/dots_config_el_at_master_jethrokuan_dots/</guid><description>Source: https://github.com/jethrokuan/dots/blob/0064ea2aab667f115a14ce48292731db46302c53/.doom.d/config.el#L488
The following exports all roam files to Hugo and includes backlinks pre-processor.
(defun jethro/org-roam-export-all () &amp;#34;Re-exports all Org-roam files to Hugo markdown.&amp;#34; (interactive) (dolist (f (org-roam--list-all-files)) (with-current-buffer (find-file f) (when (s-contains? &amp;#34;SETUPFILE&amp;#34; (buffer-string)) (org-hugo-export-wim-to-md))))) (defun jethro/org-roam--backlinks-list (file) (when (org-roam--org-roam-file-p file) (mapcar #&amp;#39;car (org-roam-db-query [:select :distinct [from] :from links :where (= to $s1) :and from :not :like $s2] file &amp;#34;%private%&amp;#34;)))) (defun jethro/org-export-preprocessor (_backend) (when-let ((links (jethro/org-roam--backlinks-list (buffer-file-name)))) (insert &amp;#34;\n** Backlinks\n&amp;#34;) (dolist (link links) (insert (format &amp;#34;- [[file:%s][%s]]\n&amp;#34; (file-relative-name link org-roam-directory) (org-roam--get-title-or-slug link)))))) (add-hook &amp;#39;org-export-before-processing-hook #&amp;#39;jethro/org-export-preprocessor))</description></item><item><title>The Go Programming Language Specification - The Go Programming Language</title><link>https://seds.nl/notes/the-go-programming-language-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://seds.nl/notes/the-go-programming-language-spec/</guid><description>tags Go Programming Programming For an operand x of type T, the address operation &amp;amp;x generates a pointer of type *T to x. The operand must be addressable, that is, either a variable, pointer indirection, or slice indexing operation; or a field selector of an addressable struct operand; or an array indexing operation of an addressable array. As an exception to the addressability requirement, x may also be a (possibly parenthesized) composite literal.</description></item></channel></rss>