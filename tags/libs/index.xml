<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>libs on Ben Mezger</title><link>https://seds.nl/tags/libs/</link><description>Recent content in libs on Ben Mezger</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 02 Aug 2020 16:44:00 -0300</lastBuildDate><atom:link href="https://seds.nl/tags/libs/index.xml" rel="self" type="application/rss+xml"/><item><title>Python temporary file</title><link>https://seds.nl/notes/python_temporary_file/</link><pubDate>Sun, 02 Aug 2020 16:44:00 -0300</pubDate><guid>https://seds.nl/notes/python_temporary_file/</guid><description>tags Python Programming Python&amp;rsquo;s tempfile standard library is pretty neat when we need to create a temporary file and/or directories. Instead of having a much of code like this:
import pathlib def create_file(filename): if pathlib.Path(filename).exists(): # handle path removal/rewrite/backup pass with open(filename, &amp;#34;w&amp;#34;) as f: # write to file pass We can ask Python to take care of handling this type of tasks for us. tempfile handles most of the OS API, so we can focus on writting the logic instead.</description></item></channel></rss>